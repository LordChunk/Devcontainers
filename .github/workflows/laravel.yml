name: 'Docker'

on:
  schedule:
    - cron: "0 0 * * 0"
  pull_request:
    branches: [ main ]
    paths:
      - 'laravel/**'
      - 'scripts/**'
      - '.github/workflows/laravel.yml'
  push:
    branches: [ main ]
    paths:
      - 'laravel/**'
      - 'scripts/**'
      - '.github/workflows/laravel.yml'

env:
  WORKDIR: laravel

jobs:
  matrix:
    runs-on: ubuntu-latest

    name: 'Matrix'

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: 'Set up Deno'
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: 'Load configurations'
        id: configurations
        working-directory: ${{ github.workspace }}/scripts
        run: |
          echo "PWD"
          echo pwd
          echo "configurations=$(deno run --allow-read ./configuration.ts)" >> $GITHUB_OUTPUT

    outputs:
      configurations: ${{ steps.configurations.outputs.configurations }}

  dockerfile:
    needs: matrix

    runs-on: ubuntu-latest

    name: 'Dockerfile.${{ matrix.configuration }}'

    strategy:
      matrix: 
        configuration: ${{ fromJson(needs.matrix.outputs.configurations) }}

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: Store repo name and owner in lower case
        shell: bash
        run: echo "LOWER_CASE_REPO_NAME=$(echo ${GITHUB_REPOSITORY} | tr /A-Z/ /a-z/)" >> $GITHUB_ENV

      - name: 'Set up Deno'
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: 'Generate Dockerfile'
        working-directory: ${{ github.workspace }}/scripts
        run: deno run --allow-read --allow-write ./generate.ts ${{ matrix.configuration }}

      - name: 'Upload Dockerfile'
        uses: actions/upload-artifact@v3
        with:
          name: Dockerfile.${{ matrix.configuration }}
          path: ${{ env.WORKDIR }}/Dockerfile.${{ matrix.configuration }}
          if-no-files-found: error

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v2

      - name: 'Setup Docker buildx'
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.LOWER_CASE_REPO_NAME }}
          tags: |
            type=raw,value=${{ matrix.configuration }}

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/arm64,linux/amd64
          context: ${{ env.WORKDIR }}
          file: ${{ env.WORKDIR }}/Dockerfile.${{ matrix.configuration }}
          push: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
          tags: ghcr.io/${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use GitHub Actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
