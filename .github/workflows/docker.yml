name: 'Docker'

on:
  schedule:
    - cron: "0 0 * * 0"

  push:
    branches: [ main ]

jobs:
  matrix:
    runs-on: ubuntu-latest

    name: 'Matrix'

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: 'Load configurations'
        id: configurations
        working-directory: scripts
        run: echo "::set-output name=configurations::$(php configurations.php)"
      
    outputs:
      configurations: ${{ steps.configurations.outputs.configurations }}

  dockerfile:
    needs: matrix

    runs-on: ubuntu-latest

    name: 'Dockerfile.${{ matrix.configuration }}'

    strategy:
      matrix: 
        configuration: ${{ fromJson(needs.matrix.outputs.configurations) }}

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      ## Setup environment variables
      - name: Set branch name as Docker image tag
        shell: bash
        run: echo "TAG_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Replace master or main branch with latest tag
        if: env.TAG_NAME == 'main' || env.TAG_NAME == 'master'
        shell: bash
        run: echo "TAG_NAME=latest" >> $GITHUB_ENV

      - name: Set tag to release name if release event
        if: github.event_name == 'release'
        shell: bash
        run: echo "TAG_NAME=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: Store repo name and owner in lower case
        shell: bash
        run: echo "LOWER_CASE_REPO_NAME=$(echo ${GITHUB_REPOSITORY} | tr /A-Z/ /a-z/)" >> $GITHUB_ENV

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: 'Generate Dockerfile'
        working-directory: scripts
        run: php generate.php ${{ matrix.configuration }}

      - name: 'Upload Dockerfile'
        uses: actions/upload-artifact@v3
        with:
          name: Dockerfile.${{ matrix.configuration }}
          path: Dockerfile

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v2

      - name: 'Setup Docker buildx'
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.configuration }}

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/arm64
          # Only releases or pushes to development or main branch
          push: ${{ github.event_name == 'release' || env.TAG_NAME == 'development' || env.TAG_NAME == 'latest' }}
          tags: ghcr.io/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }}
          # Use GitHub Actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
